


ARM Macro Assembler    Page 1 


    1 00000000         ; StringConversion.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; ECE319K lab 7 number to string conversions
    6 00000000         ;
    7 00000000         ; Used in ECE319K Labs 7,8,9,10. You write these two fun
                       ctions
    8 00000000         
    9 00000000         
   10 00000000                 EXPORT           Dec2String
   11 00000000                 EXPORT           Fix2String
   12 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   13 00000000                 THUMB
   14 00000000                 PRESERVE8
   15 00000000         
   16 00000000         
   17 00000000         ;-----------------------Dec2String----------------------
                       -
   18 00000000         ; Convert a 32-bit number into unsigned decimal format
   19 00000000         ; String the string into the empty array add null-termin
                       ation
   20 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   21 00000000         ;        R1 pointer to empty array
   22 00000000         ; Output: none
   23 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   24 00000000 00000000 
                       i       EQU              0
   25 00000000         Dec2String
   26 00000000 E92D 48F0       PUSH{R4,         R5, R6, R7, R11, LR}
   27 00000004 B081            SUB              SP, #4
   28 00000006 46EB            MOV              R11, SP
   29 00000008 4602            MOV              R2, R0
   30 0000000A F04F 040A       MOV              R4, #10
   31 0000000E F04F 0700       MOV              R7, #0
   32 00000012 F8CB 7000       STR              R7, [R11]
   33 00000016         
   34 00000016 4616            MOV              R6, R2
   35 00000018 FBB2 F2F4       UDIV             R2, R4
   36 0000001C FB02 F504       MUL              R5, R2, R4
   37 00000020 EBA6 0305       SUB              R3, R6, R5
   38 00000024 F103 0330       ADD              R3, #0x30
   39 00000028 B508            PUSH{R3,         LR}
   40 0000002A F1A3 0330       SUB              R3, #0x30
   41 0000002E         digComp
   42 0000002E 4616            MOV              R6, R2
   43 00000030 2E00            CMP              R6, #0
   44 00000032 D019            BEQ              ArrayCreation
   45 00000034 FBB2 F2F4       UDIV             R2, R4
   46 00000038 FB02 F504       MUL              R5, R2, R4
   47 0000003C EBA6 0305       SUB              R3, R6, R5
   48 00000040 F103 0330       ADD              R3, #0x30
   49 00000044 B508            PUSH{R3,         LR}
   50 00000046 F1A3 0330       SUB              R3, #0x30
   51 0000004A E7F0            B                digComp



ARM Macro Assembler    Page 2 


   52 0000004C         done
   53 0000004C F8DB 7000       LDR              R7, [R11, #i]
   54 00000050 4439            ADD              R1, R7
   55 00000052 F107 0701       ADD              R7, #1
   56 00000056 F8CB 7000       STR              R7, [R11, #i]
   57 0000005A F04F 0300       MOV              R3, #0x00
   58 0000005E 600B            STR              R3, [R1]
   59 00000060 B001            ADD              SP, #4
   60 00000062 E8BD 48F0       POP{R4,          R5, R7, R11, R6, LR}
   61 00000066 4770            BX               LR
   62 00000068         ArrayCreation
   63 00000068 E8BD 4008       POP{R3,          LR}
   64 0000006C 55CB            STRB             R3, [R1, R7]
   65 0000006E F8DB 7000       LDR              R7, [R11, #i]
   66 00000072 F107 0701       ADD              R7, #1
   67 00000076 F8CB 7000       STR              R7, [R11, #i]
   68 0000007A 45DD            CMP              SP, R11
   69 0000007C D1F4            BNE              ArrayCreation
   70 0000007E E7E5            B                done
   71 00000080         
   72 00000080         
   73 00000080         
   74 00000080         
   75 00000080         
   76 00000080         
   77 00000080         ;* * * * * * * * End of Dec2String * * * * * * * *
   78 00000080         
   79 00000080         
   80 00000080         ; -----------------------Fix2String---------------------
                       -
   81 00000080         ; Create characters for LCD display in fixed-point forma
                       t
   82 00000080         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   83 00000080         ; Inputs:  R0 is an unsigned 32-bit number
   84 00000080         ;          R1 pointer to empty array
   85 00000080         ; Outputs: none
   86 00000080         ; E.g., R0=0,    then create "0.000 "
   87 00000080         ;       R0=3,    then create "0.003"
   88 00000080         ;       R0=89,   then create "0.089"
   89 00000080         ;       R0=123,  then create "0.123"
   90 00000080         ;       R0=9999, then create "9.999"
   91 00000080         ;       R0>9999, then create "*.***"
   92 00000080         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   93 00000080 00000000 
                       j       EQU              0
   94 00000080         Fix2String
   95 00000080 E92D 0FF0       PUSH{R4,         R5, R6, R7, R8, R9, R10, R11}
   96 00000084 B081            SUB              SP, #4
   97 00000086 46EB            MOV              R11, SP
   98 00000088 F04F 0800       MOV              R8, #0
   99 0000008C F8CB 8000       STR              R8, [R11, #j]
  100 00000090 F242 7610       MOV              R6, #10000
  101 00000094 F04F 070A       MOV              R7, #10
  102 00000098 F04F 0A00       MOV              R10, #0
  103 0000009C F242 790F       MOV              R9, #9999
  104 000000A0 4548            CMP              R0, R9
  105 000000A2 D833            BHI              tooBig



ARM Macro Assembler    Page 3 


  106 000000A4         loop
  107 000000A4 2E01            CMP              R6, #1
  108 000000A6 D023            BEQ              done2
  109 000000A8 FBB0 F2F6       UDIV             R2, R0, R6
  110 000000AC FB02 F306       MUL              R3, R2, R6
  111 000000B0 EBA0 0403       SUB              R4, R0, R3
  112 000000B4 FBB6 F6F7       UDIV             R6, R6, R7
  113 000000B8 FBB4 F5F6       UDIV             R5, R4, R6
  114 000000BC F8DB 8000       LDR              R8, [R11, #j]
  115 000000C0 F105 0530       ADD              R5, #0x30
  116 000000C4 F801 5008       STRB             R5, [R1, R8]
  117 000000C8 F1A5 0530       SUB              R5, #0x30
  118 000000CC F108 0801       ADD              R8, #1
  119 000000D0 F8CB 8000       STR              R8, [R11, #j]
  120 000000D4 F5B6 7F7A       CMP              R6, #1000
  121 000000D8 D1E4            BNE              loop
  122 000000DA F04F 052E       MOV              R5, #0x2E
  123 000000DE F8DB 8000       LDR              R8, [R11, #j]
  124 000000E2 F801 5008       STRB             R5, [R1, R8]
  125 000000E6 F108 0801       ADD              R8, #1
  126 000000EA F8CB 8000       STR              R8, [R11, #j]
  127 000000EE E7D9            B                loop
  128 000000F0         done2
  129 000000F0 F04F 0500       MOV              R5, #0x00
  130 000000F4 F8DB 8000       LDR              R8, [R11, #j]
  131 000000F8 F801 5008       STRB             R5, [R1, R8]
  132 000000FC F108 0801       ADD              R8, #1
  133 00000100 F8CB 8000       STR              R8, [R11, #j]
  134 00000104 B001            ADD              SP, #4
  135 00000106 E8BD 0FF0       POP{R4,          R5, R6, R7, R8, R9, R10, R11}
  136 0000010A 4770            BX               LR
  137 0000010C         tooBig
  138 0000010C F1BA 0F04       CMP              R10, #4
  139 00000110 D0EE            BEQ              done2
  140 00000112 F04F 052A       MOV              R5, #0x2A
  141 00000116 F8DB 8000       LDR              R8, [R11, #j]
  142 0000011A F801 5008       STRB             R5, [R1, R8]
  143 0000011E F108 0801       ADD              R8, #1
  144 00000122 F8CB 8000       STR              R8, [R11, #j]
  145 00000126 F10A 0A01       ADD              R10, #1
  146 0000012A F1BA 0F01       CMP              R10, #1
  147 0000012E D1ED            BNE              tooBig
  148 00000130 F04F 052E       MOV              R5, #0x2E
  149 00000134 F8DB 8000       LDR              R8, [R11, #j]
  150 00000138 F801 5008       STRB             R5, [R1, R8]
  151 0000013C F108 0801       ADD              R8, #1
  152 00000140 F8CB 8000       STR              R8, [R11, #j]
  153 00000144 E7E2            B                tooBig
  154 00000146         
  155 00000146         
  156 00000146         
  157 00000146         
  158 00000146         
  159 00000146         
  160 00000146         
  161 00000146 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  162 00000148                 END                          ; end of file



ARM Macro Assembler    Page 4 


Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\stringconversion.d -o.\stringconversion.o -I.\RTE\_Lab7 -IC:
\Users\anesw\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Us
ers\anesw\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --
predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 538" --predef
ine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1"
 --list=.\stringconversion.lst ..\inc\StringConversion.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file ..\inc\StringConversion.s
   Uses
      None
Comment: .text unused
ArrayCreation 00000068

Symbol: ArrayCreation
   Definitions
      At line 62 in file ..\inc\StringConversion.s
   Uses
      At line 44 in file ..\inc\StringConversion.s
      At line 69 in file ..\inc\StringConversion.s

Dec2String 00000000

Symbol: Dec2String
   Definitions
      At line 25 in file ..\inc\StringConversion.s
   Uses
      At line 10 in file ..\inc\StringConversion.s
Comment: Dec2String used once
Fix2String 00000080

Symbol: Fix2String
   Definitions
      At line 94 in file ..\inc\StringConversion.s
   Uses
      At line 11 in file ..\inc\StringConversion.s
Comment: Fix2String used once
digComp 0000002E

Symbol: digComp
   Definitions
      At line 41 in file ..\inc\StringConversion.s
   Uses
      At line 51 in file ..\inc\StringConversion.s
Comment: digComp used once
done 0000004C

Symbol: done
   Definitions
      At line 52 in file ..\inc\StringConversion.s
   Uses
      At line 70 in file ..\inc\StringConversion.s
Comment: done used once
done2 000000F0

Symbol: done2
   Definitions
      At line 128 in file ..\inc\StringConversion.s
   Uses
      At line 108 in file ..\inc\StringConversion.s
      At line 139 in file ..\inc\StringConversion.s

loop 000000A4



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: loop
   Definitions
      At line 106 in file ..\inc\StringConversion.s
   Uses
      At line 121 in file ..\inc\StringConversion.s
      At line 127 in file ..\inc\StringConversion.s

tooBig 0000010C

Symbol: tooBig
   Definitions
      At line 137 in file ..\inc\StringConversion.s
   Uses
      At line 105 in file ..\inc\StringConversion.s
      At line 147 in file ..\inc\StringConversion.s
      At line 153 in file ..\inc\StringConversion.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

i 00000000

Symbol: i
   Definitions
      At line 24 in file ..\inc\StringConversion.s
   Uses
      At line 53 in file ..\inc\StringConversion.s
      At line 56 in file ..\inc\StringConversion.s
      At line 65 in file ..\inc\StringConversion.s
      At line 67 in file ..\inc\StringConversion.s

j 00000000

Symbol: j
   Definitions
      At line 93 in file ..\inc\StringConversion.s
   Uses
      At line 99 in file ..\inc\StringConversion.s
      At line 114 in file ..\inc\StringConversion.s
      At line 119 in file ..\inc\StringConversion.s
      At line 123 in file ..\inc\StringConversion.s
      At line 126 in file ..\inc\StringConversion.s
      At line 130 in file ..\inc\StringConversion.s
      At line 133 in file ..\inc\StringConversion.s
      At line 141 in file ..\inc\StringConversion.s
      At line 144 in file ..\inc\StringConversion.s
      At line 149 in file ..\inc\StringConversion.s
      At line 152 in file ..\inc\StringConversion.s

2 symbols
345 symbols in table
